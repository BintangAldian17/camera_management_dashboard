/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as mainMainLayoutRouteImport } from './routes/(main)/_mainLayout'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as mainMainLayoutDashboardIndexRouteImport } from './routes/(main)/_mainLayout/dashboard/index'

const mainRouteImport = createFileRoute('/(main)')()

const mainRoute = mainRouteImport.update({
  id: '/(main)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const mainMainLayoutRoute = mainMainLayoutRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => mainRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const mainMainLayoutDashboardIndexRoute =
  mainMainLayoutDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => mainMainLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof mainMainLayoutRouteWithChildren
  '/login': typeof authLoginRoute
  '/dashboard': typeof mainMainLayoutDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof mainMainLayoutRouteWithChildren
  '/login': typeof authLoginRoute
  '/dashboard': typeof mainMainLayoutDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)/login': typeof authLoginRoute
  '/(main)': typeof mainRouteWithChildren
  '/(main)/_mainLayout': typeof mainMainLayoutRouteWithChildren
  '/(main)/_mainLayout/dashboard/': typeof mainMainLayoutDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/(auth)/login'
    | '/(main)'
    | '/(main)/_mainLayout'
    | '/(main)/_mainLayout/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLoginRoute: typeof authLoginRoute
  mainRoute: typeof mainRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(main)': {
      id: '/(main)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(main)/_mainLayout': {
      id: '/(main)/_mainLayout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainMainLayoutRouteImport
      parentRoute: typeof mainRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(main)/_mainLayout/dashboard/': {
      id: '/(main)/_mainLayout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof mainMainLayoutDashboardIndexRouteImport
      parentRoute: typeof mainMainLayoutRoute
    }
  }
}

interface mainMainLayoutRouteChildren {
  mainMainLayoutDashboardIndexRoute: typeof mainMainLayoutDashboardIndexRoute
}

const mainMainLayoutRouteChildren: mainMainLayoutRouteChildren = {
  mainMainLayoutDashboardIndexRoute: mainMainLayoutDashboardIndexRoute,
}

const mainMainLayoutRouteWithChildren = mainMainLayoutRoute._addFileChildren(
  mainMainLayoutRouteChildren,
)

interface mainRouteChildren {
  mainMainLayoutRoute: typeof mainMainLayoutRouteWithChildren
}

const mainRouteChildren: mainRouteChildren = {
  mainMainLayoutRoute: mainMainLayoutRouteWithChildren,
}

const mainRouteWithChildren = mainRoute._addFileChildren(mainRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLoginRoute: authLoginRoute,
  mainRoute: mainRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
